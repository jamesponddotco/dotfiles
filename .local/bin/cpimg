#!/bin/bash
#
# Script Name: cpimg
# Script URL: https://git.sr.ht/~jamesponddotco/dotfiles
# Description: Upload local images to BunnyCDN Storage.
# Version: 2.1.1
# Author: James Pond
# Author URL: https://jamespond.co/
# License: European Union Public License 1.2 or later
# License URI: https://joinup.ec.europa.eu/collection/eupl/eupl-text-11-12
#

# Enable "bash strict mode".
# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -euo pipefail
IFS=$'\n\t'

# GIMME COLOURS!
# Color variables to make our output a little easier on the eyes.
text_red="\033[1;31m"
text_bold="\033[1m"
text_reset="\033[0m"

# Get the access key for the BunnyCDN storage zone.
access_key="$(gopass show bunnycdn.com/cpimgdotsh-key)"

# Create a random filename using a sha256 hash of the original filename, salted
# with Argon2id. This is overkill, and extremely stupid.
image_filename="$(sha256sum "$1" | argon2 "$(apg -a 1 -n 1 -m 64 -M SNCL -c /dev/urandom)" -id -m 16 -p 16 -e | tr -dc '[:alnum:]')"

# Make sure the filename does not collide with an existing one on the server.
http_code="$(curl --compressed -sIw '%{http_code}' -o /dev/null https://i.cpimg.sh/"${image_filename: -30:12}"."${1##*.}")"

while [[ "$http_code" == '200' ]]; do
  image_filename="$(sha256sum "$1" | argon2 "$(apg -a 1 -n 1 -m 64 -M SNCL -c /dev/urandom)" -id -m 16 -p 16 -e | tr -dc '[:alnum:]')"
done

# Optimize the image based on its extension before we upload it.
if [[ "${1##*.}" == 'png' ]]; then
  oxipng -o max -s -q -Z -t 6 "$1" --out /tmp/"$image_filename"."${1##*.}"
elif [[ "${1##*.}" =~ jpe?g ]]; then
  cjpeg -quality 60 -outfile /tmp/tmp-"$image_filename"."${1##*.}" "$1"
  jpegtran -optimize -progressive -outfile /tmp/"$image_filename"."${1##*.}" \
    /tmp/tmp-"$image_filename"."${1##*.}"
  rm /tmp/tmp-"$image_filename"."${1##*.}"
elif [[ "${1##*.}" == 'gif' ]]; then
  gifsicle -O3 --lossy=80 --colors 256 --no-verbose --no-conserve-memory "$1" \
    -o /tmp/"$image_filename"."${1##*.}"
elif [[ "${1##*.}" == 'svg' ]]; then
  svgo -q "$1" -o /tmp/"$image_filename"."${1##*.}"
else
  echo -e "${text_bold}${text_red}ERROR:${text_reset}"
  echo "This file format is not supported."
  exit 1
fi

# Upload the image using cURL.
curl --tlsv1.2 \
  --proto =https \
  --silent \
  --output /dev/null \
  --request PUT \
  --header "AccessKey: $access_key" \
  --upload-file /tmp/"$image_filename"."${1##*.}" \
  "https://storage.bunnycdn.com/cpimgdotsh/${image_filename: -30:12}.${1##*.}"

# Output the image URL.
echo "https://i.cpimg.sh/${image_filename: -30:12}.${1##*.}"

# Delete our temporary image. I mean, sure, /tmp/ is cleared when you restart
# your computer, but this take no extra effort. Come on.
rm /tmp/"$image_filename"."${1##*.}"

# All was well.
exit 0
