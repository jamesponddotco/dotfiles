#!/usr/bin/env bash
#
# Script Name: Flush 'n' Lock
# Script URL: https://git.sr.ht/~jamesponddotco/dotfiles
# Description: Flush credentials from memory and lock the computer screen.
# Version: 1.0.0
# Author: James Pond
# Author URL: https://jamespond.co/
# License: European Union Public License 1.2 or later
# License URI: https://joinup.ec.europa.eu/collection/eupl/eupl-text-11-12
#

# Use bash's "unofficial strict mode".
set -o errexit -o nounset -o errtrace -o pipefail
IFS=$'\n\t'

# Remove credentials from memory for GnuPG, SSH, sudo, and 1Password.
gpg-connect-agent --quiet reloadagent /bye > '/dev/null' 2>&1
ssh-add -q -D
sudo --remove-timestamp
1p signout

# Ask aerc to exit gracefully, as it has its own GnuPG keychain implementation.
if pgrep 'aerc' > '/dev/null' 2>&1; then
  pkill --signal TERM 'aerc'
fi

# Switch to an empty workspace before locking the screen. Skip if in Wayland.
if [[ -z "${WAYLAND_DISPLAY:-}" ]]; then
  available_workspaces="$(wmctrl -d | wc --lines)"
  readonly available_workspaces
  wmctrl -s 4 "$(( available_workspaces - 1 ))"
fi

# Lock the screen by sending a D-Bus message to the GNOME screen saver handler.
# Does not work when quoted, for some reason.
dbus-send --dest=org.gnome.ScreenSaver /org/gnome/ScreenSaver \
  --type=method_call org.gnome.ScreenSaver.Lock

# All was well.
exit 0
