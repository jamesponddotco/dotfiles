#!/usr/bin/env bash
#
# Script Name: Flush 'n' Lock
# Script URL: https://git.sr.ht/~jamesponddotco/dotfiles
# Description: Flush credentials from memory and lock the computer screen.
# Version: 1.0.0
# Author: James Pond
# Author URL: https://jamespond.co/
# License: European Union Public License 1.2 or later
# License URI: https://joinup.ec.europa.eu/collection/eupl/eupl-text-11-12
#

# Configure bash to work in "strict mode" to make it more robust, reliable and
# maintainable, like some other languages.
set -o errexit -o errtrace -o pipefail -o nounset
shopt -s nullglob
unset CDPATH
IFS=$'\n\t'
LC_ALL='C'

# Remove credentials from memory for GnuPG, SSH, sudo, and 1Password.
gpg-connect-agent --quiet reloadagent /bye > '/dev/null' 2>&1
ssh-add -q -D
sudo --remove-timestamp
1p signout

# Ask aerc to exit gracefully, as it has its own GnuPG keychain implementation.
if pgrep 'aerc' > '/dev/null' 2>&1; then
  pkill --signal TERM 'aerc'
fi

# Switch to an empty workspace in Sway before locking the screen.
available_workspaces="$(swaymsg -t get_workspaces | jq length)"
readonly available_workspaces
swaymsg "workspace $(( available_workspaces + 1 ))"

# Lock the screen by using swaylock.
swaylock --daemonize

# All was well.
exit 0
