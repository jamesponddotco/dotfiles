#! /bin/bash
#
# Script Name: Certcheck
# Script URL: https://git.sr.ht/~jamesponddotco/dotfiles
# Description: Get basic information out of an SSL certificate.
# Version: 1.0.0
# Author: James Pond
# Author URL: https://jamespond.co/
# License: European Union Public License 1.2 or later
# License URI: https://joinup.ec.europa.eu/collection/eupl/eupl-text-11-12
#

# Use bash's "unofficial strict mode".
set -o errexit -o nounset -o errtrace -o pipefail
IFS=$'\n\t'

# Force all output to use the simplest locale.
LC_ALL='C'
readonly LC_ALL

# Save the name of the script inside a readonly variable.
whoami="${0##*/}"
readonly whoami

# Color variables to make our output a little easier on the eyes. Respect
# NO_COLOR, in case the user does not want any.
if [[ -t 1 && -z "${NO_COLOR:-}" ]]; then
  c_blue='\033[0;34m'
  c_bold='\033[1m'
  c_reset='\033[0m'
  readonly c_blue
  readonly c_bold
  readonly c_reset
fi

display_usage() {

  # Display usage information when necessary.
  echo -e "${c_blue:-}${c_bold:-}USAGE:${c_reset:-}"
  echo -e "${c_bold:-}$whoami${c_reset:-} [-s|--start-date </path/to/cert/>] \
[-e|--end-date </path/to/cert/>] [-c|--common-name </path/to/cert>] [-h|--help]"

}

run_checks() {

  # Ensures the user provided a path to the certificate file.
  if [[ -z "${2:-}" ]]; then
    display_usage
    exit 22
  fi

}

cert_start_date() {

  # Display the start date of an SSL certificate in ISO 8601 format.
  openssl x509 -in "${2:-}" -noout -startdate \
    | cut --delimiter '=' --fields 2 \
    | date --iso-8601='seconds' --file -

}

cert_end_date() {

  # Display the start date of an SSL certificate in ISO 8601 format.
  openssl x509 -in "${2:-}" -noout -enddate \
    | cut --delimiter '=' --fields 2 \
    | date --iso-8601='seconds' --file -

}

cert_common_name() {

  # Display the domain the certificate was registered for. Only tested with
  # single domains and wildcard certificates, but should work with multiple
  # domain names as well.
  openssl x509 -in "${2:-}" -noout -subject -nameopt multiline \
    | awk '/commonName/ {print $3}'

}

# Call our functions.
case "${1-}" in
  -s|--start-date)
    run_checks "$@"
    cert_start_date "$@"
    ;;
  -e|--end-date)
    run_checks "$@"
    cert_end_date "$@"
    ;;
  -c|--common-name)
    run_checks "$@"
    cert_common_name "$@"
    ;;
  *)
    display_usage
    exit 22
esac

# All was well.
exit 0
