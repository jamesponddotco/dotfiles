#!/usr/bin/env bash
#
# Script Name: cpvid
# Script URL: https://git.sr.ht/~jamesponddotco/dotfiles
# Description: Upload local videos to BunnyCDN Storage.
# Version: 0.1.0
# Author: James Pond
# Author URL: https://jamespond.co/
# License: European Union Public License 1.2 or later
# License URI: https://joinup.ec.europa.eu/collection/eupl/eupl-text-11-12
#

# Use bash's "unofficial strict mode".
set -o errexit -o nounset -o errtrace -o pipefail
IFS=$'\n\t'

# Force all output to use the simplest locale.
LC_ALL='C'
readonly LC_ALL

# Increase verbosity if we are running tests.
if [[ "${BASH_OUTPUT:-quiet}" == 'verbose' ]]; then
  set -x
fi

# Get the access key for BunnyCDN from the local password store.
access_key="$(pass show cpvid/access-key)"
readonly access_key

# Generate a random filename prefix to prevent name collisions and construct a
# new filename for the video file.
original_filename="$(basename "${1:-}")"
readonly original_filename
filename_prefix="$(head --bytes 8 \
  < <(exec tr --delete --complement '[:alnum:]' < /dev/urandom))"
readonly filename_prefix
video_filename="${filename_prefix}-${original_filename}"
readonly video_filename

# Optimize the video for the web with options that are kinda safe.
HandBrakeCLI --input "${1:-}" --output "/tmp/${video_filename}" \
  --encoder 'x264' --quality 23 --maxHeight 1080 --maxWidth 1920 --two-pass \
  --turbo --optimize > '/dev/null' 2>&1

# Check to see the file size for the optimized video, and overwrite it with the
# original if it is smaller than the optimized version.
original_filesize="$(wc --bytes "${1}" | awk '{print $1}')"
readonly original_filesize
optimized_filesize="$(wc --bytes "/tmp/${video_filename}" | awk '{print $1}')"
readonly optimized_filesize
if (( "${original_filesize}" < "${optimized_filesize}" )); then
  cp "${1}" "/tmp/${video_filename}"
fi

# Upload the video to the BunnyCDN storage zone.
curl \
  --url "https://storage.bunnycdn.com/cpviddotsh/${video_filename}" \
  --tlsv1.2 \
  --proto '=https' \
  --silent \
  --output '/dev/null' \
  --request PUT \
  --header "AccessKey: ${access_key}" \
  --upload-file "/tmp/${video_filename}"

# Remove the temporary video file.
rm --force "/tmp/${video_filename}"

# Output the image URL.
if [[ "${2:-}" =~ ^(-c$|--clipboard$) ]]; then
  echo -n "https://v.cpvid.sh/${video_filename}" \
    | xsel --clipboard --input
else
  echo "https://v.cpvid.sh/${video_filename}"
fi

# All was well.
exit 0
